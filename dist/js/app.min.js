import{fetchRecipes}from"./api.min.js";import{Recipe}from"./recipe.min.js";let recipes=[],selectedItems={ingredients:new Set,appliances:new Set,ustensils:new Set},dropdownsData=[{id:"ingredients",label:"Ingrédients"},{id:"appliances",label:"Appareils"},{id:"ustensils",label:"Ustensiles"}],generateDropdown=({id:e,label:t})=>`
        <div class="dropdown-container relative inline-block w-full pb-2 text-left lg:max-w-56 lg:pb-0">
            <div class="flex flex-col justify-between">
                <button type="button"
                    class="dropdown-button mr-16 inline-flex w-full cursor-pointer items-center justify-between rounded-xl bg-white p-4">
                    ${t}
                    <i class="fa-solid fa-chevron-down arrow-icon transition-transform duration-300"></i>
                </button>
            </div>
            <div class="dropdown dropdown-panel absolute left-0 z-50 mt-0 hidden w-full origin-top transform rounded-b-xl border-t-0 border-gray-300 bg-white shadow-lg transition-all duration-300 ease-in-out">
                <div class="py-2">
                    <div class="relative mb-2 flex items-center px-4">
                        <input type="text" class="search-input w-full rounded-sm border border-color-site-400 px-3 py-2"
                            placeholder="Recherchez" />
                        <button class="clear-search-input absolute right-11 hidden p-2 text-color-site-300">
                            <i class="fas fa-times fa-xs"></i>
                        </button>
                        <div class="absolute right-7 flex items-center">
                            <i class="fa-solid fa-magnifying-glass text-color-site-300"></i>
                        </div>
                    </div>
                    <select multiple class="no-scrollbar dropdown-select h-40 w-full border-0 focus:outline-none focus:ring-0"
                        id="${e}-select"></select>
                </div>
            </div>
        </div>
    `,renderDropdowns=()=>{let t=document.querySelector("#dropdowns-container");dropdownsData.forEach(e=>{t.innerHTML+=generateDropdown(e)})},escapeHtml=e=>{let t={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#039;"};return e.replace(/[&<>"']/g,e=>t[e])},searchRecipesFunctional=(e,t)=>{let s=e.toLowerCase();return t.filter(e=>matchesQuery(s,e))},matchesQuery=(e,t)=>t.name.toLowerCase().includes(e)||t.ingredients.filter(e=>e.toLowerCase()).includes(e)||t.description.toLowerCase().includes(e),matchesSelectedItems=(e,t)=>matchesAllItems(e.ingredients,t.ingredients,"ingredient")&&matchesSingleItem(e.appliance,t.appliances)&&matchesAllItems(e.ustensils,t.ustensils),matchesAllItems=(e,t,s)=>Array.from(t).every(t=>e.some(e=>(s?e[s]:e).toLowerCase()===t.toLowerCase())),matchesSingleItem=(e,t)=>0===t.size||t.has(e.toLowerCase()),main=async()=>{try{var e=await fetchRecipes("src/data/recipes.json");e&&e.recipes?(recipes=e.recipes.map(e=>new Recipe(e)),updateRecipeCount(recipes.length),renderDropdowns(),populateSelects(),addSelectEventListeners(),document.querySelectorAll(".dropdown-container").forEach(setupDropdown),displayRecipes(recipes),document.querySelector("#search").addEventListener("input",e=>filterRecipes(e.target.value)),document.querySelector("#clear-button").addEventListener("click",()=>{document.querySelector("#search").value="",filterRecipes("")})):console.error("No recipes found in the data")}catch(e){console.error("Error in main:",e)}},displayRecipes=e=>{document.querySelector("#recipes-container").innerHTML=e.map(e=>createRecipeCard(e)).join("")},createRecipeCard=e=>`
    <article class="relative flex flex-col overflow-hidden rounded-3xl bg-white shadow-lg">
        <img src="src/assets/img/${e.image}" alt="${escapeHtml(e.name)}" class="h-64 w-full object-cover"/>
        <div class="absolute right-4 top-4 rounded-xl bg-yellow-400 px-4 py-1 text-xs text-color-site-100">${e.time}min</div>
        <div class="flex flex-grow flex-col px-6 pb-16 pt-8">
            <h2 class="mb-7 font-anton text-lg font-bold">${escapeHtml(e.name)}</h2>
            <h3 class="mb-2 text-sm font-bold uppercase tracking-wide text-color-site-300">Recette</h3>
            <p class="mb-8 flex-grow text-gray-700 line-clamp-4">${escapeHtml(truncateDescription(e.description))}</p>
            <h3 class="mb-4 text-sm font-bold uppercase tracking-wide text-color-site-300">Ingrédients</h3>
            <div class="grid grid-cols-2 gap-y-5">
                ${e.ingredients.map(e=>`
                    <div class="flex flex-col text-sm">
                        <span class="font-medium">${escapeHtml(e.ingredient)}</span>
                        <span class="text-color-site-300">${e.quantity||""} ${e.unit||""}</span>
                    </div>
                `).join("")}
            </div>
        </div>
    </article>
`,filterRecipes=e=>{e=searchRecipesFunctional(e,recipes).filter(e=>matchesSelectedItems(e,selectedItems));updateRecipeCount(e.length),displayRecipes(e)},updateRecipeCount=e=>{var t=document.querySelector("#recipe-count");let s;s=0===e?"00 recette":1===e?"01 recette":e.toString().padStart(2,"0")+" recettes",t.textContent=s},truncateDescription=(e,t=4)=>{var s=e.split("\n");return s.length<=t?e:s.slice(0,t).join(" ")+"..."},populateSelects=()=>{let t=new Set,s=new Set,l=new Set;recipes.forEach(e=>{addItemsToSet(t,e.ingredients,"ingredient"),s.add(e.appliance),addItemsToSet(l,e.ustensils)}),populateSelect("#ingredients-select",t),populateSelect("#appliances-select",s),populateSelect("#ustensils-select",l)},addItemsToSet=(t,e,s)=>{e.forEach(e=>t.add((s?e[s]:e).toLowerCase()))},populateSelect=(e,t)=>{document.querySelector(e).innerHTML=Array.from(t).map(e=>`
        <option value="${e}" class="py-2 capitalize-first-letter">${e}</option>
    `).join("")},addSelectEventListeners=()=>{["ingredients","appliances","ustensils"].forEach(t=>{document.querySelector(`#${t}-select`).addEventListener("change",e=>{addSelectedItem(t,e.target.value),e.target.value="",filterRecipes(document.querySelector("#search").value)})})},addSelectedItem=(e,t)=>{t&&!selectedItems[e].has(t.toLowerCase())&&(selectedItems[e].add(t.toLowerCase()),updateSelectedItemsDisplay())},updateSelectedItemsDisplay=()=>{document.querySelector("#selected-items").innerHTML=Object.keys(selectedItems).map(t=>Array.from(selectedItems[t]).map(e=>`
            <li class="flex w-48 items-center justify-between rounded-lg bg-color-site-50 p-4 text-sm">
                ${escapeHtml(e)}
                <button class="ml-2" onclick="removeSelectedItem('${t}', '${e}')">
                    <i class="fas fa-times"></i>
                </button>
            </li>
        `).join("")).join("")},removeSelectedItem=(e,t)=>{selectedItems[e].delete(t.toLowerCase()),updateSelectedItemsDisplay(),filterRecipes(document.querySelector("#search").value)};main(),window.removeSelectedItem=removeSelectedItem;